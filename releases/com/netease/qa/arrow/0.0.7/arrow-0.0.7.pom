<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.netease.qa</groupId>
	<artifactId>arrow</artifactId>
	<version>0.0.7</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<github.global.server>github</github.global.server>
	</properties>

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

	<dependencies>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>3.9.1</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>[1.2.16,)</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier>
		</dependency>

		<dependency>
			<groupId>com.thoughtworks.qdox</groupId>
			<artifactId>qdox</artifactId>
			<version>2.0-M7</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>[2.4,)</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>[6.9.4,)</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<resources>
			<resource>
				<directory>src</directory>
				<filtering>true</filtering>
				<includes>
					<include>log4j.properties</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-shade-plugin</artifactId>-->
				<!--<version>2.1</version>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<phase>package</phase>-->
						<!--<goals>-->
							<!--<goal>shade</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--<transformers>-->
								<!--<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
									<!--<mainClass>com.netease.qa.Convert</mainClass>-->
								<!--</transformer>-->
							<!--</transformers>-->
						<!--</configuration>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
			<!--<plugin>-->
				<!--<artifactId>maven-deploy-plugin</artifactId>-->
				<!--<version>2.8.1</version>-->
				<!--<configuration>-->
					<!--<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>-->
				<!--</configuration>-->
			<!--</plugin>-->
			<!--&lt;!&ndash; use "mvn clean deploy" to upload arrow.jar to mvn-repo branch &ndash;&gt;-->
			<!--<plugin>-->
				<!--<groupId>com.github.github</groupId>-->
				<!--<artifactId>site-maven-plugin</artifactId>-->
				<!--&lt;!&ndash;<version>0.8</version>&ndash;&gt;-->
				<!--<configuration>-->
					<!--<message>Maven artifacts for arrow ${project.version}</message>  &lt;!&ndash; git commit message &ndash;&gt;-->
					<!--<noJekyll>true</noJekyll>                                  &lt;!&ndash; disable webpage processing &ndash;&gt;-->
					<!--<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> &lt;!&ndash; matches distribution management repository url above &ndash;&gt;-->
					<!--<branch>refs/heads/mvn-repo</branch>                       &lt;!&ndash; remote branch name &ndash;&gt;-->
					<!--<includes>-->
						<!--<include>**/*</include>-->
					<!--</includes>-->
					<!--<repositoryName>arrow</repositoryName>      &lt;!&ndash; github repo name &ndash;&gt;-->
					<!--<repositoryOwner>kevinkong</repositoryOwner>    &lt;!&ndash; github username &ndash;&gt;-->
				<!--</configuration>-->
				<!--<executions>-->
					<!--&lt;!&ndash; run site-maven-plugin's 'site' target as part of the build's normal -->
						<!--'deploy' phase &ndash;&gt;-->
					<!--<execution>-->
						<!--<goals>-->
							<!--<goal>site</goal>-->
						<!--</goals>-->
						<!--<phase>deploy</phase>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
			<!--<plugin>-->
				<!--<artifactId>maven-deploy-plugin</artifactId>-->
				<!--<version>2.8.1</version>-->
				<!--<configuration>-->
					<!--<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>-->
				<!--</configuration>-->
			<!--</plugin>-->
			<!-- use "mvn clean deploy" to upload arrow.jar to mvn-repo branch -->
			<!--<plugin>-->
				<!--<groupId>com.github.github</groupId>-->
				<!--<artifactId>site-maven-plugin</artifactId>-->
				<!--<version>0.8</version>-->
				<!--<configuration>-->
					<!--<message>Maven artifacts for arrow ${project.version}</message>  &lt;!&ndash; git commit message &ndash;&gt;-->
					<!--<noJekyll>true</noJekyll>                                  &lt;!&ndash; disable webpage processing &ndash;&gt;-->
					<!--<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> &lt;!&ndash; matches distribution management repository url above &ndash;&gt;-->
					<!--<branch>refs/heads/mvn-repo</branch>                       &lt;!&ndash; remote branch name &ndash;&gt;-->
					<!--<includes>-->
						<!--<include>**/*</include>-->
					<!--</includes>-->
					<!--<repositoryName>arrow</repositoryName>      &lt;!&ndash; github repo name &ndash;&gt;-->
					<!--<repositoryOwner>kevinkong</repositoryOwner>    &lt;!&ndash; github username &ndash;&gt;-->
				<!--</configuration>-->
				<!--<executions>-->
					<!--&lt;!&ndash; run site-maven-plugin's 'site' target as part of the build's normal -->
						<!--'deploy' phase &ndash;&gt;-->
					<!--<execution>-->
						<!--<goals>-->
							<!--<goal>site</goal>-->
						<!--</goals>-->
						<!--<phase>deploy</phase>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
		</plugins>
	</build>
</project>
